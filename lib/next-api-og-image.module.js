import{renderToStaticMarkup as e}from"react-dom/server";import r from"deepmerge";import t from"twemoji";import n from"puppeteer-core";import o from"chrome-aws-lambda";function s(){return s=Object.assign||function(e){for(var r=1;r<arguments.length;r++){var t=arguments[r];for(var n in t)Object.prototype.hasOwnProperty.call(t,n)&&(e[n]=t[n])}return e},s.apply(this,arguments)}var a=function(e){try{var r=function(r){return Promise.resolve(n.launch(c?r:{args:m,executablePath:r,headless:o.headless})).then(function(r){return Promise.resolve(r.newPage()).then(function(r){return Promise.resolve(r.setViewport({width:1200,height:630})).then(function(){return s({},e,{page:r})})})})},t=e.page,a=e.envMode,i=e.executable;if(t)return Promise.resolve(s({},e,{page:t}));var c=!u(a),m=c||o.args;return Promise.resolve(c?r({args:[],executablePath:i,headless:!0}):Promise.resolve(o.executablePath).then(r))}catch(e){return Promise.reject(e)}},i=["body","query"];function c(n){var o=(n=r({contentType:"image/png",strategy:"query",cacheControl:"max-age 3600, must-revalidate",dev:{inspectHtml:!0,errorsInResponse:!0}},n)).template,c=o.html,l=o.react,p=n.cacheControl,h=n.strategy,v=n.contentType,f=n.dev,d=f.inspectHtml,g=f.errorsInResponse;if(c&&l)throw new Error("Ambigious template provided. You must provide either `html` or `react` template.");if(!c&&!l)throw new Error("No template was provided.");var y=process.env.NODE_ENV,P=function(){var e=[].slice.call(arguments);return function(){try{return Promise.resolve(e.reduce(function(e,r){try{return Promise.resolve(e).then(function(e){return Promise.resolve(r(e))})}catch(e){return Promise.reject(e)}},Promise.resolve({envMode:process.env.NODE_ENV})))}catch(e){return Promise.reject(e)}}}(m,a,function(e){return function(r){var t=r.page,n=r.envMode;return s({},r,{createImage:function(r){try{return Promise.resolve(t.setContent(r)).then(function(){return Promise.resolve(!u(n)&&e?t.content():t.screenshot({type:"png",encoding:"binary"}))})}catch(e){return Promise.reject(e)}}})}}(d));return function(r,n){try{!function(e,r,t,n){var o={body:function(){var e=t.method,o=t.headers["content-type"];if("POST"!==e&&"application/json"!==o){var s="Strategy is set to `body` so parameters must be passed by POST request and JSON payload. Current method: "+e+" and current content type: "+o;throw r&&n.json({message:s}),new Error(s)}},query:function(){var e=t.method;if("GET"!==e){var o="Strategy is set to `query` so parameters must be passed by GET request and query params. Current method: "+e;throw r&&n.json({message:o}),new Error(o)}}},s=o[e];if(!s)throw new Error("Unknown strategy provided. Possible values: "+i);s()}(h,!u(y)&&g,r,n);var o=JSON.parse(JSON.stringify("query"===h?r.query:r.body,function(e,r){return r&&"object"==typeof r?r:""+r}));return Promise.resolve(P()).then(function(r){function a(a){function i(o){var s=c&&!l?o:e(o);n.setHeader("Content-Type",!u(y)&&d?"text/html":v),n.setHeader("Cache-Control",p);var a=n.write;return Promise.resolve(r.createImage(function(e){return"<style>\n    .emoji {\n      height: 1em;\n      width: 1em;\n      margin: 0 .05em 0 .1em;\n      vertical-align: -0.1em;\n    }\n  </style>"+t.parse(e,{folder:"svg",ext:".svg"})}(s))).then(function(e){a.call(n,e),n.end()})}return c&&!l?i(c&&!l?a:l(s({},o))):Promise.resolve(c&&!l?a:l(s({},o))).then(i)}return c&&!l?Promise.resolve(c&&!l?c(s({},o)):0).then(a):a(c&&!l?c(s({},o)):0)})}catch(e){return Promise.reject(e)}}}function u(e){return"production"===e||"staging"===e}function m(e){return s({},e,{executable:"win32"===process.platform?"C:\\Program Files (x86)\\Google\\Chrome\\Application\\chrome.exe":"linux"===process.platform?"/usr/bin/google-chrome":"/Applications/Google Chrome.app/Contents/MacOS/Google Chrome"})}export{c as withOGImage};
//# sourceMappingURL=next-api-og-image.module.js.map

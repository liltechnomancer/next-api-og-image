!function(e,r){"object"==typeof exports&&"undefined"!=typeof module?r(exports,require("react-dom/server"),require("deepmerge"),require("twemoji"),require("puppeteer-core"),require("chrome-aws-lambda")):"function"==typeof define&&define.amd?define(["exports","react-dom/server","deepmerge","twemoji","puppeteer-core","chrome-aws-lambda"],r):r((e||self).nextApiOgImage={},e.server,e.deepmerge,e.twemoji,e.puppeteerCore,e.chromeAwsLambda)}(this,function(e,r,t,n,o,a){function s(e){return e&&"object"==typeof e&&"default"in e?e:{default:e}}var i=s(t),u=s(n),c=s(o),l=s(a);function m(){return m=Object.assign||function(e){for(var r=1;r<arguments.length;r++){var t=arguments[r];for(var n in t)Object.prototype.hasOwnProperty.call(t,n)&&(e[n]=t[n])}return e},m.apply(this,arguments)}var p=function(e){try{var r=function(r){return Promise.resolve(c.default.launch(a?r:{args:s,executablePath:r,headless:l.default.headless})).then(function(r){return Promise.resolve(r.newPage()).then(function(r){return Promise.resolve(r.setViewport({width:1200,height:630})).then(function(){return m({},e,{page:r})})})})},t=e.page,n=e.envMode,o=e.executable;if(t)return Promise.resolve(m({},e,{page:t}));var a=!f(n),s=a||l.default.args;return Promise.resolve(a?r({args:[],executablePath:o,headless:!0}):Promise.resolve(l.default.executablePath).then(r))}catch(e){return Promise.reject(e)}},d=["body","query"];function f(e){return"production"===e||"staging"===e}function h(e){return m({},e,{executable:"win32"===process.platform?"C:\\Program Files (x86)\\Google\\Chrome\\Application\\chrome.exe":"linux"===process.platform?"/usr/bin/google-chrome":"/Applications/Google Chrome.app/Contents/MacOS/Google Chrome"})}e.withOGImage=function(e){var t=(e=i.default({contentType:"image/png",strategy:"query",cacheControl:"max-age 3600, must-revalidate",dev:{inspectHtml:!0,errorsInResponse:!0}},e)).template,n=t.html,o=t.react,a=e.cacheControl,s=e.strategy,c=e.contentType,l=e.dev,v=l.inspectHtml,g=l.errorsInResponse;if(n&&o)throw new Error("Ambigious template provided. You must provide either `html` or `react` template.");if(!n&&!o)throw new Error("No template was provided.");var y=process.env.NODE_ENV,P=function(){var e=[].slice.call(arguments);return function(){try{return Promise.resolve(e.reduce(function(e,r){try{return Promise.resolve(e).then(function(e){return Promise.resolve(r(e))})}catch(e){return Promise.reject(e)}},Promise.resolve({envMode:process.env.NODE_ENV})))}catch(e){return Promise.reject(e)}}}(h,p,function(e){return function(r){var t=r.page,n=r.envMode;return m({},r,{createImage:function(r){try{return Promise.resolve(t.setContent(r)).then(function(){return Promise.resolve(!f(n)&&e?t.content():t.screenshot({type:"png",encoding:"binary"}))})}catch(e){return Promise.reject(e)}}})}}(v));return function(e,t){try{!function(e,r,t,n){var o={body:function(){var e=t.method,o=t.headers["content-type"];if("POST"!==e&&"application/json"!==o){var a="Strategy is set to `body` so parameters must be passed by POST request and JSON payload. Current method: "+e+" and current content type: "+o;throw r&&n.json({message:a}),new Error(a)}},query:function(){var e=t.method;if("GET"!==e){var o="Strategy is set to `query` so parameters must be passed by GET request and query params. Current method: "+e;throw r&&n.json({message:o}),new Error(o)}}},a=o[e];if(!a)throw new Error("Unknown strategy provided. Possible values: "+d);a()}(s,!f(y)&&g,e,t);var i=JSON.parse(JSON.stringify("query"===s?e.query:e.body,function(e,r){return r&&"object"==typeof r?r:""+r}));return Promise.resolve(P()).then(function(e){function s(s){function l(s){var i=n&&!o?s:r.renderToStaticMarkup(s);t.setHeader("Content-Type",!f(y)&&v?"text/html":c),t.setHeader("Cache-Control",a);var l=t.write;return Promise.resolve(e.createImage(function(e){return"<style>\n    .emoji {\n      height: 1em;\n      width: 1em;\n      margin: 0 .05em 0 .1em;\n      vertical-align: -0.1em;\n    }\n  </style>"+u.default.parse(e,{folder:"svg",ext:".svg"})}(i))).then(function(e){l.call(t,e),t.end()})}return n&&!o?l(n&&!o?s:o(m({},i))):Promise.resolve(n&&!o?s:o(m({},i))).then(l)}return n&&!o?Promise.resolve(n&&!o?n(m({},i)):0).then(s):s(n&&!o?n(m({},i)):0)})}catch(e){return Promise.reject(e)}}}});
//# sourceMappingURL=next-api-og-image.umd.js.map
